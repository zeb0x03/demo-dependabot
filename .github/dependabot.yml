name: Dependabot Auto-Update

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight
  workflow_dispatch:  # Allow manual triggering

jobs:
  update-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Dependabot
        uses: dependabot/dependabot-core@v1

      - name: Run Dependabot
        id: dependabot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEPENDABOT_API_URL: ${{ secrets.DEPENDABOT_API_URL }}
        run: |
          dependabot update

      - name: Create Pull Request
        if: steps.dependabot.outputs.pull_request_created == 'true'
        run: |
          curl -X POST "${DEPENDABOT_API_URL}/update_jobs/${GITHUB_RUN_ID}/create_pull_request" \
            -H "Authorization: Bearer ${GITHUB_TOKEN}" \
            -H "Content-Type: application/json" \
            -d '{"data": {"dependency-names": ["example-dep"], "updated-dependency-files": {}, "base-commit-sha": "${{ github.sha }}"}}'

      - name: Update Pull Request
        if: steps.dependabot.outputs.pull_request_updated == 'true'
        run: |
          curl -X POST "${DEPENDABOT_API_URL}/update_jobs/${GITHUB_RUN_ID}/update_pull_request" \
            -H "Authorization: Bearer ${GITHUB_TOKEN}" \
            -H "Content-Type: application/json" \
            -d '{"data": {"dependency-names": ["example-dep"], "updated-dependency-files": {}, "base-commit-sha": "${{ github.sha }}"}}'

      - name: Close Pull Request
        if: steps.dependabot.outputs.pull_request_closed == 'true'
        run: |
          curl -X POST "${DEPENDABOT_API_URL}/update_jobs/${GITHUB_RUN_ID}/close_pull_request" \
            -H "Authorization: Bearer ${GITHUB_TOKEN}" \
            -H "Content-Type: application/json" \
            -d '{"data": {"dependency-names": ["example-dep"], "reason": "outdated"}}'

      - name: Record Update Job Error
        if: failure()
        run: |
          curl -X POST "${DEPENDABOT_API_URL}/update_jobs/${GITHUB_RUN_ID}/record_update_job_error" \
            -H "Authorization: Bearer ${GITHUB_TOKEN}" \
            -H "Content-Type: application/json" \
            -d '{"data": {"error-type": "update_failed", "error-details": {"message": "Failed to update dependencies"}}}'

      - name: Record Update Job Warning
        run: |
          curl -X POST "${DEPENDABOT_API_URL}/update_jobs/${GITHUB_RUN_ID}/record_update_job_warning" \
            -H "Authorization: Bearer ${GITHUB_TOKEN}" \
            -H "Content-Type: application/json" \
            -d '{"data": {"warn-type": "potential_conflict", "warn-title": "Potential Conflict", "warn-description": "There might be conflicts with existing changes"}}'

      - name: Mark Job as Processed
        if: always()
        run: |
          curl -X PATCH "${DEPENDABOT_API_URL}/update_jobs/${GITHUB_RUN_ID}/mark_as_processed" \
            -H "Authorization: Bearer ${GITHUB_TOKEN}" \
            -H "Content-Type: application/json" \
            -d '{"data": {"base-commit-sha": "${{ github.sha }}"}}'
